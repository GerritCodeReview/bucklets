# Current Buck version lacks support to overwrite Java version
# in .buckconfig file, under Java section, e. g.:
#
# [java]
#   src_roots = java, resources
#   source = 8
#   target = 8
#
# Instead, the documentaion suggests to provide Java version in
# each and every java_library() call.
#
# This bucklet overwrites the definition of original java_library
# and java_test rules.
#
# Example: this bucklet must be used in .buckconfig file, under
# include section to ensure, that this file is seen before others:
#
# [buildfile]
#   includes = //bucklets/java8.bucklet
#
# @See https://github.com/facebook/buck/pull/67
#
original_java_library = java_library
def java_library(
    name,
    srcs=[],
    resources=[],
    source='8',
    target='8',
    proguard_config=None,
    deps=[],
    exported_deps=[],
    visibility=[],
    ):
  original_java_library(
    name=name,
    srcs=srcs,
    resources=resources,
    source=source,
    target=target,
    proguard_config=proguard_config,
    deps=deps,
    exported_deps=exported_deps,
    visibility=visibility,
  )

original_java_test = java_test
def java_test(
    name,
    srcs=[],
    labels=[],
    resources=[],
    source='8',
    target='8',
    vm_args=[],
    source_under_test=[],
    contacts=[],
    deps=[],
    visibility=[],
    ):
  original_java_test(
    name=name,
    srcs=srcs,
    labels=labels,
    resources=resources,
    source=source,
    target=target,
    vm_args=vm_args,
    source_under_test=source_under_test,
    contacts=contacts,
    deps=deps,
    visibility=visibility,
  )
